name: PyInstaller

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Python 3.8
        uses: actions/setup-python@v2
        with:
          python-version: 3.8

      - name: Install dependencies
        run: |
          pip install --upgrade pip
          pip install click requests prettytable

      - name: Build executable
        run: |
          pyinstaller --onefile gladia_cli.py --hidden-import=click --hidden-import=requests --hidden-import=prettytable

      - name: Create release
        id: create_release
        uses: actions/github-script@v4
        with:
          script: |
            const { data } = await github.repos.listReleases({
              owner: context.repo.owner,
              repo: context.repo.repo,
              per_page: 1
            })

            let version = '1.0.0'
            if (data.length > 0) {
              const latestTag = data[0].tag_name
              const [major, minor, patch] = latestTag.split('.').map(Number)
              version = `${major}.${minor}.${patch + 1}`
            }

            const release = await github.repos.createRelease({
              owner: context.repo.owner,
              repo: context.repo.repo,
              tag_name: `v${version}`,
              name: `v${version}`,
              body: 'Release notes go here'
            })

            const assetResponse = await github.repos.uploadReleaseAsset({
              owner: context.repo.owner,
              repo: context.repo.repo,
              release_id: release.data.id,
              name: 'gladia_cli',
              asset_path: './dist/gladia_cli'
            })

            console.log(assetResponse.data)

        env:
            GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
